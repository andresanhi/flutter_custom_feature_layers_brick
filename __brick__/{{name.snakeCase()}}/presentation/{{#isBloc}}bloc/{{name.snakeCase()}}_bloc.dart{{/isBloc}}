import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:meta/meta.dart';

part '{{name.snakeCase()}}_event.dart';
part '{{name.snakeCase()}}_state.dart';

class {{name.pascalCase()}}Bloc extends Bloc<{{name.pascalCase()}}Event, {{name.pascalCase()}}State> {
  {{name.pascalCase()}}Bloc() : super({{name.pascalCase()}}Initial()) {
    on<{{name.pascalCase()}}Started>(_on{{name.pascalCase()}}Started);
  }

  Future<void> _on{{name.pascalCase()}}Started(
    {{name.pascalCase()}}Started event,
    Emitter<{{name.pascalCase()}}State> emit,
  ) async {
    try {
      emit({{name.pascalCase()}}Loading());
      // TODO: Implement feature logic
      emit({{name.pascalCase()}}Loaded());
    } catch (e) {
      emit({{name.pascalCase()}}Error(e.toString()));
    }
  }
}
